cmake_minimum_required(VERSION 3.3)
project(skypeopensource2)

if (MSVC)
    set(CMAKE_CXX_FLAGS_RELEASE "/w /O3")
    set(CMAKE_C_FLAGS_RELEASE "/w /O3")

    set(CMAKE_CXX_FLAGS_DEBUG "/Wall /O0")
    set(CMAKE_C_FLAGS_DEBUG "/Wall /O0")
    #TODO: flags
else ()
    set(CMAKE_CXX_FLAGS_RELEASE "-std=c++11")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3 -fstrict-aliasing -flto -fno-fat-lto-objects")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -fomit-frame-pointer -march=native -w")

    set(CMAKE_C_FLAGS_RELEASE "-std=c11")
    set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -O3 -fstrict-aliasing -flto -fno-fat-lto-objects")
    set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -fomit-frame-pointer -march=native -w")
    set(CMAKE_EXE_LINKER_FLAGS_RELEASE "-O1 -flto -s")

    set(CMAKE_CXX_FLAGS_DEBUG "-g -pg -std=c++11 -O0 -DDEBUG")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall -Wextra -Wshadow -Wstrict-aliasing -Weffc++")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fno-inline-small-functions -fno-inline")
    set(CMAKE_C_FLAGS_DEBUG "-g -pg -std=c11 -O0 -DDEBUG")
    set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -Wall -Wextra -Wshadow -Wstrict-aliasing")
    set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -fno-inline-small-functions -fno-inline")
endif ()
include_directories("include")

add_subdirectory(sqlite)
add_subdirectory(crypto)
add_subdirectory(miracl)
add_subdirectory(skype)

add_subdirectory(goodrecvrelay3)
add_subdirectory(goodrecvrelay4_dll)
add_subdirectory(goodsendrelay3)
add_subdirectory(goodsendrelay4_dll)
add_subdirectory(skyauth3)
add_subdirectory(skyauth4_dll)
add_subdirectory(skycontact3)
add_subdirectory(skycontact4_dll)
add_subdirectory(skyrelay3)
add_subdirectory(skyrelay4_dll)
add_subdirectory(skysearch3)
add_subdirectory(skysearch4_dll)
add_subdirectory(sqldbread)
add_subdirectory(sqldbread2_dll)